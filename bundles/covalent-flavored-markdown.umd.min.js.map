{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","../../../src/platform/flavored-markdown/cfm-list/cfm-list.component.ts","../../../../src/platform/flavored-markdown/flavored-markdown.component.ts","../../../src/platform/flavored-markdown/flavored-markdown-loader/flavored-markdown-loader.component.ts","../../../../src/platform/flavored-markdown/flavored-markdown.module.ts"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","length","push","Object","create","__read","o","m","r","i","ar","error","__spread","arguments","concat","dense","Component","args","selector","template","Input","TdFlavoredMarkdownButtonComponent","display","text","data","clicked","EventEmitter","prototype","emitClick","emit","HostBinding","Output","TdFlavoredMarkdownContainerDirective","viewContainerRef","_renderer","clear","setProperty","element","nativeElement","Directive","ViewContainerRef","Renderer2","TdFlavoredMarkdownComponent","_componentFactoryResolver","_changeDetectorRef","_injector","_elementRef","_simpleLineBreaks","_components","_viewInit","copyCodeToClipboard","copyCodeTooltips","contentReady","buttonClicked","defineProperty","content","_content","simpleLineBreaks","hostedUrl","_hostedUrl","anchor","_anchor","ngOnChanges","changes","refresh","scrollToAnchor","ngAfterViewInit","_this","_loadContent","container","textContent","markForCheck","markdown","trim","lines","replace","split","firstLineWhitespace","match","startingWhitespaceRegex_1","RegExp","map","line","join","_replaceCodeBlocks","_replaceCheckbox","_replaceTables","_replaceLists","_replaceButtons","keys","sort","compA","compB","indexOf","_render","setTimeout","key","markdownParts","shift","undefined","insert","hostView","contentRef","resolveComponentFactory","TdMarkdownComponent","instance","_replaceComponent","type","regExp","replacerFunc","componentIndex","_i","componentFactory","componentRef","MatCheckbox","checked","disabled","labelPosition","getElementsByClassName","buttonRegExp","globalButtonRegExp","source","flags","matches","exec","subscribe","clickEvent","TdHighlightComponent","language","codeblock","codeLang","TdDataTableComponent","dataTableLines","columns","filter","col","s","alignment","index","widths","min","parseInt","max","width","isNaN","name","toLowerCase","numeric","test","rowSplit","cell","row","forEach","rowSplitCell","sortable","sortChange","event","a","b","direction","Number","parseFloat","order","TdDataTableSortingOrder","Descending","TdFlavoredListComponent","lineTexts","toString","sublineTexts","sublines","subline","changeDetection","ChangeDetectionStrategy","OnPush","ComponentFactoryResolver","ChangeDetectorRef","Injector","ElementRef","ViewChild","static","TdFlavoredMarkdownLoaderComponent","_markdownUrlLoaderService","loadFailed","loading","url","httpOptions","loadMarkdown","_a","load","_b","error_1","TdMarkdownLoaderService","NgModule","imports","CommonModule","MatCheckboxModule","MatListModule","MatProgressBarModule","CovalentDataTableModule","CovalentHighlightModule","CovalentMarkdownModule","MatButtonModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Component, Input } from '@angular/core';\n\nexport interface IFlavoredListItem {\n  line: string;\n  sublines?: string[];\n}\n\n@Component({\n  selector: 'cfm-list',\n  styleUrls: ['./cfm-list.component.scss'],\n  templateUrl: './cfm-list.component.html',\n})\nexport class TdFlavoredListComponent {\n  @Input() lines: IFlavoredListItem[];\n  @Input() dense: boolean = false;\n}\n","import {\n  Component,\n  Directive,\n  AfterViewInit,\n  Input,\n  Renderer2,\n  Type,\n  ComponentFactory,\n  ChangeDetectorRef,\n  EventEmitter,\n  Output,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  Injector,\n  ComponentRef,\n  ViewChild,\n  ChangeDetectionStrategy,\n  OnChanges,\n  SimpleChanges,\n  ElementRef,\n  HostBinding,\n} from '@angular/core';\n\nimport { MatCheckbox } from '@angular/material/checkbox';\nimport { TdFlavoredListComponent, IFlavoredListItem } from './cfm-list/cfm-list.component';\nimport { TdHighlightComponent, ICopyCodeTooltips } from '@covalent/highlight';\nimport { TdMarkdownComponent, scrollToAnchor } from '@covalent/markdown';\nimport {\n  TdDataTableComponent,\n  TdDataTableSortingOrder,\n  ITdDataTableSortChangeEvent,\n  ITdDataTableColumnWidth,\n} from '@covalent/core/data-table';\n\nexport interface ITdFlavoredMarkdownButtonClickEvent {\n  text: string;\n  data: string;\n}\n\n@Component({\n  template: `\n    <button mat-raised-button (click)=\"emitClick()\">\n      {{ text }}\n    </button>\n  `,\n})\nexport class TdFlavoredMarkdownButtonComponent {\n  @HostBinding('style.display') display: string = 'inline-block';\n  @Input() text: string = '';\n  @Input() data: string = '';\n  @Output()\n  clicked: EventEmitter<ITdFlavoredMarkdownButtonClickEvent> = new EventEmitter<ITdFlavoredMarkdownButtonClickEvent>();\n  emitClick(): void {\n    this.clicked.emit({ text: this.text, data: this.data });\n  }\n}\n\n@Directive({\n  selector: '[tdFlavoredMarkdownContainer]',\n})\nexport class TdFlavoredMarkdownContainerDirective {\n  constructor(public viewContainerRef: ViewContainerRef, private _renderer: Renderer2) {}\n\n  clear(): void {\n    this._renderer.setProperty(this.viewContainerRef.element.nativeElement, 'innerHTML', '');\n    this.viewContainerRef.clear();\n  }\n}\n\nexport type IReplacerFunc<T> = (componentRef: ComponentRef<T>, ...args: any[]) => void;\n\n@Component({\n  selector: 'td-flavored-markdown',\n  styleUrls: ['./flavored-markdown.component.scss'],\n  templateUrl: './flavored-markdown.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdFlavoredMarkdownComponent implements AfterViewInit, OnChanges {\n  private _content: string;\n  private _simpleLineBreaks: boolean = false;\n  private _hostedUrl: string;\n  private _anchor: string;\n\n  private _components: {} = {};\n  private _viewInit: boolean = false;\n  /**\n   * content?: string\n   *\n   * Markdown format content to be parsed as material/covalent markup.\n   *\n   * e.g. README.md content.\n   */\n  @Input('content')\n  set content(content: string) {\n    this._content = content;\n  }\n\n  /**\n   * simpleLineBreaks?: string\n   *\n   * Sets whether newline characters inside paragraphs and spans are parsed as <br/>.\n   * Defaults to false.\n   */\n  @Input('simpleLineBreaks')\n  set simpleLineBreaks(simpleLineBreaks: boolean) {\n    this._simpleLineBreaks = simpleLineBreaks;\n  }\n\n  /**\n   * hostedUrl?: string\n   *\n   * If markdown contains relative paths, this is required to generate correct urls\n   *\n   */\n  @Input('hostedUrl')\n  set hostedUrl(hostedUrl: string) {\n    this._hostedUrl = hostedUrl;\n  }\n\n  /**\n   * anchor?: string\n   *\n   * Anchor to jump to\n   *\n   */\n  @Input('anchor')\n  set anchor(anchor: string) {\n    this._anchor = anchor;\n  }\n\n  /**\n   * copyCodeToClipboard?: boolean\n   *\n   * Display copy button on code snippets to copy code to clipboard.\n   *\n   */\n  @Input() copyCodeToClipboard: boolean = false;\n\n  /**\n   * copyCodeTooltips?: ICopyCodeTooltips\n   *\n   * Tooltips for copy button to copy and upon copying.\n   */\n  @Input() copyCodeTooltips: ICopyCodeTooltips = {};\n  /**\n   * contentReady?: function\n   * Event emitted after the markdown content rendering is finished.\n   */\n  @Output() contentReady: EventEmitter<undefined> = new EventEmitter<undefined>();\n\n  /**\n   * buttonClicked?: ITdFlavoredMarkdownButtonClickEvent\n   * Event emitted when a button is clicked\n   * Is an object containing text and data of button\n   */\n  @Output()\n  buttonClicked: EventEmitter<ITdFlavoredMarkdownButtonClickEvent> = new EventEmitter<ITdFlavoredMarkdownButtonClickEvent>();\n\n  @ViewChild(TdFlavoredMarkdownContainerDirective, { static: true }) container: TdFlavoredMarkdownContainerDirective;\n\n  constructor(\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _renderer: Renderer2,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _injector: Injector,\n    private _elementRef: ElementRef,\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // only anchor changed\n    if (changes.anchor && !changes.content && !changes.simpleLineBreaks && !changes.hostedUrl) {\n      scrollToAnchor(this._elementRef.nativeElement, this._anchor, false);\n    } else {\n      this.refresh();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    if (!this._content) {\n      this._loadContent((<HTMLElement>this.container.viewContainerRef.element.nativeElement).textContent);\n      Promise.resolve().then(() => {\n        this._viewInit = true;\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  refresh(): void {\n    if (this._content) {\n      this._loadContent(this._content);\n    } else if (this._viewInit) {\n      this._loadContent((<HTMLElement>this.container.viewContainerRef.element.nativeElement).textContent);\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _loadContent(markdown: string): void {\n    if (markdown && markdown.trim().length > 0) {\n      this.container.clear();\n      markdown = markdown.replace(/^(\\s|\\t)*\\n+/g, '').replace(/(\\s|\\t)*\\n+(\\s|\\t)*$/g, '');\n      // Split markdown by line characters\n      let lines: string[] = markdown.split('\\n');\n\n      // check how much indentation is used by the first actual markdown line\n      const firstLineWhitespace: string = lines[0].match(/^(\\s|\\t)*/)[0];\n\n      // Remove all indentation spaces so markdown can be parsed correctly\n      const startingWhitespaceRegex: RegExp = new RegExp('^' + firstLineWhitespace);\n      lines = lines.map(function (line: string): string {\n        return line.replace(startingWhitespaceRegex, '');\n      });\n\n      // Join lines again with line characters\n      markdown = [...lines, '', ''].join('\\n');\n      markdown = this._replaceCodeBlocks(markdown);\n      markdown = this._replaceCheckbox(markdown);\n      markdown = this._replaceTables(markdown);\n      markdown = this._replaceLists(markdown);\n      markdown = this._replaceButtons(markdown);\n      const keys: string[] = Object.keys(this._components);\n      // need to sort the placeholders in order of encounter in markdown content\n      keys.sort((compA: string, compB: string) => {\n        return markdown.indexOf(compA) > markdown.indexOf(compB) ? 1 : -1;\n      });\n      this._render(markdown, keys[0], keys);\n      // TODO: timeout required since resizing of html elements occurs which causes a change in the scroll position\n      setTimeout(() => scrollToAnchor(this._elementRef.nativeElement, this._anchor, false), 250);\n      this.contentReady.emit();\n      Promise.resolve().then(() => {\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  private _render(markdown: string, key: string, keys: string[]): void {\n    if (!markdown) {\n      return;\n    }\n    if (key && markdown.indexOf(key) > -1) {\n      const markdownParts: string[] = markdown.split(key);\n      keys.shift();\n      this._render(markdownParts[0], undefined, undefined);\n      this.container.viewContainerRef.insert(this._components[key].hostView, this.container.viewContainerRef.length);\n      this._components[key] = undefined;\n      delete this._components[key];\n      this._render(markdownParts[1], keys[0], keys);\n    } else {\n      const contentRef: ComponentRef<TdMarkdownComponent> = this._componentFactoryResolver\n        .resolveComponentFactory(TdMarkdownComponent)\n        .create(this._injector);\n      contentRef.instance.content = markdown;\n      contentRef.instance.hostedUrl = this._hostedUrl;\n      contentRef.instance.simpleLineBreaks = this._simpleLineBreaks;\n      contentRef.instance.refresh();\n      this.container.viewContainerRef.insert(contentRef.hostView, this.container.viewContainerRef.length);\n    }\n  }\n\n  private _replaceComponent<T>(\n    markdown: string,\n    type: Type<T>,\n    regExp: RegExp,\n    replacerFunc: IReplacerFunc<T>,\n  ): string {\n    let componentIndex: number = 0;\n    return markdown.replace(regExp, (...args: any[]) => {\n      const componentFactory: ComponentFactory<T> = this._componentFactoryResolver.resolveComponentFactory(type);\n      const componentRef: ComponentRef<T> = componentFactory.create(this._injector);\n      replacerFunc(componentRef, ...args);\n      const key: string = '[' + componentFactory.selector + '-placeholder-' + componentIndex++ + ']';\n      this._components[key] = componentRef;\n      return key;\n    });\n  }\n\n  private _replaceCheckbox(markdown: string): string {\n    const checkboxRegExp: RegExp = /(?:^|\\n)- \\[(x| )\\](.*)/gi;\n    return this._replaceComponent(\n      markdown,\n      MatCheckbox,\n      checkboxRegExp,\n      (componentRef: ComponentRef<MatCheckbox>, match: string, checked: string, label: string) => {\n        componentRef.instance.checked = !!checked.trim();\n        componentRef.instance.disabled = true;\n        componentRef.instance.labelPosition = 'after';\n        this._renderer.setProperty(\n          (<HTMLElement>componentRef.instance._elementRef.nativeElement).getElementsByClassName(\n            'mat-checkbox-label',\n          )[0],\n          'innerHTML',\n          label,\n        );\n      },\n    );\n  }\n\n  private _replaceButtons(markdown: string): string {\n    const buttonRegExp: RegExp = /\\[([^\\[]+)\\](\\(#data=(.*)\\))/i;\n    const globalButtonRegExp: RegExp = new RegExp(buttonRegExp.source, buttonRegExp.flags + 'g');\n    return this._replaceComponent(\n      markdown,\n      TdFlavoredMarkdownButtonComponent,\n      globalButtonRegExp,\n      (componentRef: ComponentRef<TdFlavoredMarkdownButtonComponent>, match: string) => {\n        const matches: RegExpExecArray = buttonRegExp.exec(match);\n        const text: string = matches[1];\n        const data: string = matches[3];\n        componentRef.instance.text = text;\n        componentRef.instance.data = data;\n        componentRef.instance.clicked.subscribe((clickEvent: ITdFlavoredMarkdownButtonClickEvent) =>\n          this.buttonClicked.emit(clickEvent),\n        );\n      },\n    );\n  }\n\n  private _replaceCodeBlocks(markdown: string): string {\n    const codeBlockRegExp: RegExp = /(?:^|\\n)```(.*)\\n([\\s\\S]*?)\\n```/g;\n    return this._replaceComponent(\n      markdown,\n      TdHighlightComponent,\n      codeBlockRegExp,\n      (componentRef: ComponentRef<TdHighlightComponent>, match: string, language: string, codeblock: string) => {\n        if (language) {\n          componentRef.instance.codeLang = language;\n        }\n        componentRef.instance.copyCodeToClipboard = this.copyCodeToClipboard;\n        componentRef.instance.copyCodeTooltips = this.copyCodeTooltips;\n        componentRef.instance.content = codeblock;\n      },\n    );\n  }\n\n  private _replaceTables(markdown: string): string {\n    const tableRgx: RegExp = /^ {0,3}\\|?.+\\|.+\\n[ \\t]{0,3}\\|?[ \\t]*:?[ \\t]*(?:-|=){2,}[ \\t]*:?[ \\t]*\\|[ \\t]*:?[ \\t]*(?:-|=){2,}[\\s\\S]+?(?:\\n\\n|~0)/gm;\n    return this._replaceComponent(\n      markdown,\n      TdDataTableComponent,\n      tableRgx,\n      (componentRef: ComponentRef<TdDataTableComponent>, match: string) => {\n        const dataTableLines: string[] = match.replace(/(\\s|\\t)*\\n+(\\s|\\t)*$/g, '').split('\\n');\n        const columns: string[] = dataTableLines[0]\n          .split('|')\n          .filter((col: string) => {\n            return col;\n          })\n          .map((s: string) => {\n            return s.trim();\n          });\n        const alignment: string[] = dataTableLines[1]\n          .split('|')\n          .filter((v: string) => {\n            return v;\n          })\n          .map((s: string) => {\n            return s.trim();\n          });\n        componentRef.instance.columns = columns.map((col: string, index: number) => {\n          const widths: string[] = alignment[index].split('---');\n          const min: number = parseInt(widths[0], 10);\n          const max: number = parseInt(widths[1], 10);\n          let width: ITdDataTableColumnWidth = { min, max };\n          if (isNaN(min) && isNaN(max)) {\n            width = undefined;\n          } else if (isNaN(max)) {\n            width.max = undefined;\n          } else if (isNaN(min)) {\n            width.min = undefined;\n          }\n          return {\n            label: col,\n            name: col.toLowerCase().trim(),\n            numeric: /^--*[ \\t]*:[ \\t]*$/.test(alignment[index]),\n            width,\n          };\n        });\n\n        const data: any[] = [];\n        for (let i: number = 2; i < dataTableLines.length; i++) {\n          const rowSplit: string[] = dataTableLines[i]\n            .split('|')\n            .filter((cell: string) => {\n              return cell;\n            })\n            .map((s: string) => {\n              return s.trim();\n            });\n          const row: any = {};\n          columns.forEach((col: string, index: number) => {\n            const rowSplitCell: string = rowSplit[index];\n            if (rowSplitCell) {\n              row[col.toLowerCase().trim()] = rowSplitCell.replace(/`(.*)`/, (m: string, value: string) => {\n                return value;\n              });\n            }\n          });\n          data.push(row);\n        }\n        componentRef.instance.data = data;\n        componentRef.instance.sortable = true;\n        componentRef.instance.sortChange.subscribe((event: ITdDataTableSortChangeEvent) => {\n          componentRef.instance.data.sort((a: any, b: any) => {\n            const compA: any = a[event.name];\n            const compB: any = b[event.name];\n            let direction: number = 0;\n            if (!Number.isNaN(Number.parseFloat(compA)) && !Number.isNaN(Number.parseFloat(compB))) {\n              direction = Number.parseFloat(compA) - Number.parseFloat(compB);\n            } else {\n              if (compA < compB) {\n                direction = -1;\n              } else if (compA > compB) {\n                direction = 1;\n              }\n            }\n            return direction * (event.order === TdDataTableSortingOrder.Descending ? -1 : 1);\n          });\n          componentRef.instance.refresh();\n        });\n        setTimeout(() => {\n          componentRef.instance.refresh();\n        });\n      },\n    );\n  }\n\n  private _replaceLists(markdown: string): string {\n    const listRegExp: RegExp = /(?:^|\\n)(( *\\+)[ |\\t](.*)\\n)+/g;\n    return this._replaceComponent(\n      markdown,\n      TdFlavoredListComponent,\n      listRegExp,\n      (componentRef: ComponentRef<TdFlavoredListComponent>, match: string) => {\n        const lineTexts: string[] = match.split(\n          new RegExp('\\\\n {' + (match.indexOf('+') - 1).toString() + '}\\\\+[ |\\\\t]'),\n        );\n        lineTexts.shift();\n        const lines: IFlavoredListItem[] = [];\n        lineTexts.forEach((text: string, index: number) => {\n          const sublineTexts: string[] = text.split(/\\n *\\+ /);\n          lines.push({\n            line: sublineTexts.shift(),\n            sublines: sublineTexts.map((subline: string) => {\n              return subline.trim();\n            }),\n          });\n        });\n        componentRef.instance.lines = lines;\n      },\n    );\n  }\n}\n","import {\n  Component,\n  Input,\n  ChangeDetectorRef,\n  SimpleChanges,\n  OnChanges,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { TdMarkdownLoaderService } from '@covalent/markdown';\nimport { ITdFlavoredMarkdownButtonClickEvent } from '../flavored-markdown.component';\nimport { ICopyCodeTooltips } from '@covalent/highlight';\n\n// TODO: make a td-markdown-loader component\n\n@Component({\n  selector: 'td-flavored-markdown-loader',\n  styleUrls: ['./flavored-markdown-loader.component.scss'],\n  templateUrl: './flavored-markdown-loader.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdFlavoredMarkdownLoaderComponent implements OnChanges {\n  /**\n   * url: string\n   * The url of the markdown file.\n   */\n  @Input() url: string;\n\n  /**\n   * httpOptions: object\n   * HTTP options that can be part of the request.\n   */\n  @Input() httpOptions: object;\n\n  /**\n   * anchor: string\n   * Anchor to jump to.\n   */\n  @Input() anchor: string;\n\n  /**\n   * copyCodeToClipboard?: boolean\n   *\n   * Display copy button on code snippets to copy code to clipboard.\n   *\n   */\n  @Input() copyCodeToClipboard: boolean = false;\n\n  /**\n   * copyCodeTooltips?: ICopyCodeTooltips\n   *\n   * Tooltips for copy button to copy and upon copying.\n   */\n  @Input() copyCodeTooltips: ICopyCodeTooltips = {};\n\n  /**\n   * contentReady: void\n   * Emitted when markdown rendering is finished.\n   */\n  @Output() contentReady: EventEmitter<void> = new EventEmitter();\n\n  /**\n   * loadFailed: Error\n   * Emitted when loading of markdown file fails.\n   */\n  @Output() loadFailed: EventEmitter<Error> = new EventEmitter();\n\n  @Output() buttonClicked: EventEmitter<ITdFlavoredMarkdownButtonClickEvent> = new EventEmitter();\n\n  content: string;\n  loading: boolean = true;\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _markdownUrlLoaderService: TdMarkdownLoaderService,\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.url || changes.httpOptions) {\n      this.loadMarkdown();\n    }\n  }\n\n  async loadMarkdown(): Promise<void> {\n    this.loading = true;\n    this._changeDetectorRef.markForCheck();\n    try {\n      this.content = await this._markdownUrlLoaderService.load(this.url, this.httpOptions);\n    } catch (error) {\n      this.loadFailed.emit(error);\n    } finally {\n      this.loading = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatCheckbox, MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatListModule } from '@angular/material/list';\n\nimport { CovalentDataTableModule, TdDataTableComponent } from '@covalent/core/data-table';\nimport { CovalentHighlightModule, TdHighlightComponent } from '@covalent/highlight';\nimport { CovalentMarkdownModule, TdMarkdownComponent } from '@covalent/markdown';\n\nimport { TdFlavoredListComponent } from './cfm-list/cfm-list.component';\nimport {\n  TdFlavoredMarkdownComponent,\n  TdFlavoredMarkdownContainerDirective,\n  TdFlavoredMarkdownButtonComponent,\n} from './flavored-markdown.component';\nimport { TdFlavoredMarkdownLoaderComponent } from './flavored-markdown-loader/flavored-markdown-loader.component';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatCheckboxModule,\n    MatListModule,\n    MatProgressBarModule,\n    CovalentDataTableModule,\n    CovalentHighlightModule,\n    CovalentMarkdownModule,\n    MatButtonModule,\n  ],\n  declarations: [\n    TdFlavoredListComponent,\n    TdFlavoredMarkdownComponent,\n    TdFlavoredMarkdownContainerDirective,\n    TdFlavoredMarkdownLoaderComponent,\n    TdFlavoredMarkdownButtonComponent,\n  ],\n  exports: [TdFlavoredMarkdownComponent, TdFlavoredMarkdownLoaderComponent],\n})\nexport class CovalentFlavoredMarkdownModule {}\n"]}