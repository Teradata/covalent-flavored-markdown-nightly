{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@covalent/flavored-markdown/cfm-list/cfm-list.component.ts","ng://@covalent/flavored-markdown/flavored-markdown.component.ts","ng://@covalent/flavored-markdown/flavored-markdown-loader/flavored-markdown-loader.component.ts","ng://@covalent/flavored-markdown/flavored-markdown.module.ts"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","length","push","__read","o","m","r","i","ar","error","__spread","arguments","concat","TdFlavoredListComponent","dense","Component","args","selector","template","Input","TdFlavoredMarkdownButtonComponent","display","text","data","clicked","EventEmitter","prototype","emitClick","emit","HostBinding","Output","TdFlavoredMarkdownContainerDirective","viewContainerRef","_renderer","clear","setProperty","element","nativeElement","Directive","ViewContainerRef","Renderer2","TdFlavoredMarkdownComponent","_componentFactoryResolver","_changeDetectorRef","_injector","_elementRef","_simpleLineBreaks","_components","_viewInit","copyCodeToClipboard","copyCodeTooltips","contentReady","buttonClicked","Object","defineProperty","content","_content","simpleLineBreaks","hostedUrl","_hostedUrl","anchor","_anchor","ngOnChanges","changes","refresh","scrollToAnchor","ngAfterViewInit","_this","_loadContent","container","textContent","markForCheck","markdown","trim","lines","replace","split","firstLineWhitespace","match","startingWhitespaceRegex_1","RegExp","map","line","join","_replaceCodeBlocks","_replaceCheckbox","_replaceTables","_replaceLists","_replaceButtons","keys","sort","compA","compB","indexOf","_render","setTimeout","key","markdownParts","shift","undefined","insert","hostView","contentRef","resolveComponentFactory","TdMarkdownComponent","create","instance","_replaceComponent","type","regExp","replacerFunc","componentIndex","_i","componentFactory","componentRef","MatCheckbox","checked","disabled","labelPosition","getElementsByClassName","buttonRegExp","globalButtonRegExp","source","flags","matches","exec","subscribe","clickEvent","TdHighlightComponent","language","codeblock","lang","TdDataTableComponent","dataTableLines","columns","filter","col","s","alignment","index","widths","min","parseInt","max","width","isNaN","name","toLowerCase","numeric","test","rowSplit","cell","row","forEach","rowSplitCell","sortable","sortChange","event","a","b","direction","Number","parseFloat","order","TdDataTableSortingOrder","Descending","lineTexts","toString","sublineTexts","sublines","subline","changeDetection","ChangeDetectionStrategy","OnPush","ComponentFactoryResolver","ChangeDetectorRef","Injector","ElementRef","ViewChild","static","TdFlavoredMarkdownLoaderComponent","_markdownUrlLoaderService","loadFailed","loading","url","httpOptions","loadMarkdown","_a","load","_b","error_1","TdMarkdownLoaderService","CovalentFlavoredMarkdownModule","NgModule","imports","CommonModule","MatCheckboxModule","MatListModule","MatProgressBarModule","CovalentDataTableModule","CovalentHighlightModule","CovalentMarkdownModule","MatButtonModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Component, Input } from '@angular/core';\n\nexport interface IFlavoredListItem {\n  line: string;\n  sublines?: string[];\n}\n\n@Component({\n  selector: 'cfm-list',\n  styleUrls: ['./cfm-list.component.scss'],\n  templateUrl: './cfm-list.component.html',\n})\nexport class TdFlavoredListComponent {\n  @Input() lines: IFlavoredListItem[];\n  @Input() dense: boolean = false;\n}\n","import {\n  Component,\n  Directive,\n  AfterViewInit,\n  Input,\n  Renderer2,\n  Type,\n  ComponentFactory,\n  ChangeDetectorRef,\n  EventEmitter,\n  Output,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  Injector,\n  ComponentRef,\n  ViewChild,\n  ChangeDetectionStrategy,\n  OnChanges,\n  SimpleChanges,\n  ElementRef,\n  HostBinding,\n} from '@angular/core';\n\nimport { MatCheckbox } from '@angular/material/checkbox';\nimport { TdFlavoredListComponent, IFlavoredListItem } from './cfm-list/cfm-list.component';\nimport { TdHighlightComponent, ICopyCodeTooltips } from '@covalent/highlight';\nimport { TdMarkdownComponent, scrollToAnchor } from '@covalent/markdown';\nimport {\n  TdDataTableComponent,\n  TdDataTableSortingOrder,\n  ITdDataTableSortChangeEvent,\n  ITdDataTableColumnWidth,\n} from '@covalent/core/data-table';\n\nexport interface ITdFlavoredMarkdownButtonClickEvent {\n  text: string;\n  data: string;\n}\n\n@Component({\n  template: `\n    <button mat-raised-button (click)=\"emitClick()\">\n      {{ text }}\n    </button>\n  `,\n})\nexport class TdFlavoredMarkdownButtonComponent {\n  @HostBinding('style.display') display: string = 'inline-block';\n  @Input() text: string = '';\n  @Input() data: string = '';\n  @Output() clicked: EventEmitter<ITdFlavoredMarkdownButtonClickEvent> = new EventEmitter<\n    ITdFlavoredMarkdownButtonClickEvent\n  >();\n  emitClick(): void {\n    this.clicked.emit({ text: this.text, data: this.data });\n  }\n}\n\n@Directive({\n  selector: '[tdFlavoredMarkdownContainer]',\n})\nexport class TdFlavoredMarkdownContainerDirective {\n  constructor(public viewContainerRef: ViewContainerRef, private _renderer: Renderer2) {}\n\n  clear(): void {\n    this._renderer.setProperty(this.viewContainerRef.element.nativeElement, 'innerHTML', '');\n    this.viewContainerRef.clear();\n  }\n}\n\nexport type IReplacerFunc<T> = (componentRef: ComponentRef<T>, ...args: any[]) => void;\n\n@Component({\n  selector: 'td-flavored-markdown',\n  styleUrls: ['./flavored-markdown.component.scss'],\n  templateUrl: './flavored-markdown.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdFlavoredMarkdownComponent implements AfterViewInit, OnChanges {\n  private _content: string;\n  private _simpleLineBreaks: boolean = false;\n  private _hostedUrl: string;\n  private _anchor: string;\n\n  private _components: {} = {};\n  private _viewInit: boolean = false;\n  /**\n   * content?: string\n   *\n   * Markdown format content to be parsed as material/covalent markup.\n   *\n   * e.g. README.md content.\n   */\n  @Input('content')\n  set content(content: string) {\n    this._content = content;\n  }\n\n  /**\n   * simpleLineBreaks?: string\n   *\n   * Sets whether newline characters inside paragraphs and spans are parsed as <br/>.\n   * Defaults to false.\n   */\n  @Input('simpleLineBreaks')\n  set simpleLineBreaks(simpleLineBreaks: boolean) {\n    this._simpleLineBreaks = simpleLineBreaks;\n  }\n\n  /**\n   * hostedUrl?: string\n   *\n   * If markdown contains relative paths, this is required to generate correct urls\n   *\n   */\n  @Input('hostedUrl')\n  set hostedUrl(hostedUrl: string) {\n    this._hostedUrl = hostedUrl;\n  }\n\n  /**\n   * anchor?: string\n   *\n   * Anchor to jump to\n   *\n   */\n  @Input('anchor')\n  set anchor(anchor: string) {\n    this._anchor = anchor;\n  }\n\n  /**\n   * copyCodeToClipboard?: boolean\n   *\n   * Display copy button on code snippets to copy code to clipboard.\n   *\n   */\n  @Input() copyCodeToClipboard: boolean = false;\n\n  /**\n   * copyCodeTooltips?: ICopyCodeTooltips\n   *\n   * Tooltips for copy button to copy and upon copying.\n   */\n  @Input() copyCodeTooltips: ICopyCodeTooltips = {};\n  /**\n   * contentReady?: function\n   * Event emitted after the markdown content rendering is finished.\n   */\n  @Output() contentReady: EventEmitter<undefined> = new EventEmitter<undefined>();\n\n  /**\n   * buttonClicked?: ITdFlavoredMarkdownButtonClickEvent\n   * Event emitted when a button is clicked\n   * Is an object containing text and data of button\n   */\n  @Output() buttonClicked: EventEmitter<ITdFlavoredMarkdownButtonClickEvent> = new EventEmitter<\n    ITdFlavoredMarkdownButtonClickEvent\n  >();\n\n  @ViewChild(TdFlavoredMarkdownContainerDirective, { static: true }) container: TdFlavoredMarkdownContainerDirective;\n\n  constructor(\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _renderer: Renderer2,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _injector: Injector,\n    private _elementRef: ElementRef,\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // only anchor changed\n    if (changes.anchor && !changes.content && !changes.simpleLineBreaks && !changes.hostedUrl) {\n      scrollToAnchor(this._elementRef.nativeElement, this._anchor, false);\n    } else {\n      this.refresh();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    if (!this._content) {\n      this._loadContent((<HTMLElement>this.container.viewContainerRef.element.nativeElement).textContent);\n      Promise.resolve().then(() => {\n        this._viewInit = true;\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  refresh(): void {\n    if (this._content) {\n      this._loadContent(this._content);\n    } else if (this._viewInit) {\n      this._loadContent((<HTMLElement>this.container.viewContainerRef.element.nativeElement).textContent);\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n\n  private _loadContent(markdown: string): void {\n    if (markdown && markdown.trim().length > 0) {\n      this.container.clear();\n      markdown = markdown.replace(/^(\\s|\\t)*\\n+/g, '').replace(/(\\s|\\t)*\\n+(\\s|\\t)*$/g, '');\n      // Split markdown by line characters\n      let lines: string[] = markdown.split('\\n');\n\n      // check how much indentation is used by the first actual markdown line\n      const firstLineWhitespace: string = lines[0].match(/^(\\s|\\t)*/)[0];\n\n      // Remove all indentation spaces so markdown can be parsed correctly\n      const startingWhitespaceRegex: RegExp = new RegExp('^' + firstLineWhitespace);\n      lines = lines.map(function (line: string): string {\n        return line.replace(startingWhitespaceRegex, '');\n      });\n\n      // Join lines again with line characters\n      markdown = [...lines, '', ''].join('\\n');\n      markdown = this._replaceCodeBlocks(markdown);\n      markdown = this._replaceCheckbox(markdown);\n      markdown = this._replaceTables(markdown);\n      markdown = this._replaceLists(markdown);\n      markdown = this._replaceButtons(markdown);\n      const keys: string[] = Object.keys(this._components);\n      // need to sort the placeholders in order of encounter in markdown content\n      keys.sort((compA: string, compB: string) => {\n        return markdown.indexOf(compA) > markdown.indexOf(compB) ? 1 : -1;\n      });\n      this._render(markdown, keys[0], keys);\n      // TODO: timeout required since resizing of html elements occurs which causes a change in the scroll position\n      setTimeout(() => scrollToAnchor(this._elementRef.nativeElement, this._anchor, false), 250);\n      this.contentReady.emit();\n      Promise.resolve().then(() => {\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  private _render(markdown: string, key: string, keys: string[]): void {\n    if (!markdown) {\n      return;\n    }\n    if (key && markdown.indexOf(key) > -1) {\n      const markdownParts: string[] = markdown.split(key);\n      keys.shift();\n      this._render(markdownParts[0], undefined, undefined);\n      this.container.viewContainerRef.insert(this._components[key].hostView, this.container.viewContainerRef.length);\n      this._components[key] = undefined;\n      delete this._components[key];\n      this._render(markdownParts[1], keys[0], keys);\n    } else {\n      const contentRef: ComponentRef<TdMarkdownComponent> = this._componentFactoryResolver\n        .resolveComponentFactory(TdMarkdownComponent)\n        .create(this._injector);\n      contentRef.instance.content = markdown;\n      contentRef.instance.hostedUrl = this._hostedUrl;\n      contentRef.instance.simpleLineBreaks = this._simpleLineBreaks;\n      contentRef.instance.refresh();\n      this.container.viewContainerRef.insert(contentRef.hostView, this.container.viewContainerRef.length);\n    }\n  }\n\n  private _replaceComponent<T>(\n    markdown: string,\n    type: Type<T>,\n    regExp: RegExp,\n    replacerFunc: IReplacerFunc<T>,\n  ): string {\n    let componentIndex: number = 0;\n    return markdown.replace(regExp, (...args: any[]) => {\n      const componentFactory: ComponentFactory<T> = this._componentFactoryResolver.resolveComponentFactory(type);\n      const componentRef: ComponentRef<T> = componentFactory.create(this._injector);\n      replacerFunc(componentRef, ...args);\n      const key: string = '[' + componentFactory.selector + '-placeholder-' + componentIndex++ + ']';\n      this._components[key] = componentRef;\n      return key;\n    });\n  }\n\n  private _replaceCheckbox(markdown: string): string {\n    const checkboxRegExp: RegExp = /(?:^|\\n)- \\[(x| )\\](.*)/gi;\n    return this._replaceComponent(\n      markdown,\n      MatCheckbox,\n      checkboxRegExp,\n      (componentRef: ComponentRef<MatCheckbox>, match: string, checked: string, label: string) => {\n        componentRef.instance.checked = !!checked.trim();\n        componentRef.instance.disabled = true;\n        componentRef.instance.labelPosition = 'after';\n        this._renderer.setProperty(\n          (<HTMLElement>componentRef.instance._elementRef.nativeElement).getElementsByClassName(\n            'mat-checkbox-label',\n          )[0],\n          'innerHTML',\n          label,\n        );\n      },\n    );\n  }\n\n  private _replaceButtons(markdown: string): string {\n    const buttonRegExp: RegExp = /\\[([^\\[]+)\\](\\(#data=(.*)\\))/i;\n    const globalButtonRegExp: RegExp = new RegExp(buttonRegExp.source, buttonRegExp.flags + 'g');\n    return this._replaceComponent(\n      markdown,\n      TdFlavoredMarkdownButtonComponent,\n      globalButtonRegExp,\n      (componentRef: ComponentRef<TdFlavoredMarkdownButtonComponent>, match: string) => {\n        const matches: RegExpExecArray = buttonRegExp.exec(match);\n        const text: string = matches[1];\n        const data: string = matches[3];\n        componentRef.instance.text = text;\n        componentRef.instance.data = data;\n        componentRef.instance.clicked.subscribe((clickEvent: ITdFlavoredMarkdownButtonClickEvent) =>\n          this.buttonClicked.emit(clickEvent),\n        );\n      },\n    );\n  }\n\n  private _replaceCodeBlocks(markdown: string): string {\n    const codeBlockRegExp: RegExp = /(?:^|\\n)```(.*)\\n([\\s\\S]*?)\\n```/g;\n    return this._replaceComponent(\n      markdown,\n      TdHighlightComponent,\n      codeBlockRegExp,\n      (componentRef: ComponentRef<TdHighlightComponent>, match: string, language: string, codeblock: string) => {\n        if (language) {\n          componentRef.instance.lang = language;\n        }\n        componentRef.instance.copyCodeToClipboard = this.copyCodeToClipboard;\n        componentRef.instance.copyCodeTooltips = this.copyCodeTooltips;\n        componentRef.instance.content = codeblock;\n      },\n    );\n  }\n\n  private _replaceTables(markdown: string): string {\n    const tableRgx: RegExp = /^ {0,3}\\|?.+\\|.+\\n[ \\t]{0,3}\\|?[ \\t]*:?[ \\t]*(?:-|=){2,}[ \\t]*:?[ \\t]*\\|[ \\t]*:?[ \\t]*(?:-|=){2,}[\\s\\S]+?(?:\\n\\n|~0)/gm;\n    return this._replaceComponent(\n      markdown,\n      TdDataTableComponent,\n      tableRgx,\n      (componentRef: ComponentRef<TdDataTableComponent>, match: string) => {\n        const dataTableLines: string[] = match.replace(/(\\s|\\t)*\\n+(\\s|\\t)*$/g, '').split('\\n');\n        const columns: string[] = dataTableLines[0]\n          .split('|')\n          .filter((col: string) => {\n            return col;\n          })\n          .map((s: string) => {\n            return s.trim();\n          });\n        const alignment: string[] = dataTableLines[1]\n          .split('|')\n          .filter((v: string) => {\n            return v;\n          })\n          .map((s: string) => {\n            return s.trim();\n          });\n        componentRef.instance.columns = columns.map((col: string, index: number) => {\n          const widths: string[] = alignment[index].split('---');\n          const min: number = parseInt(widths[0], 10);\n          const max: number = parseInt(widths[1], 10);\n          let width: ITdDataTableColumnWidth = { min, max };\n          if (isNaN(min) && isNaN(max)) {\n            width = undefined;\n          } else if (isNaN(max)) {\n            width.max = undefined;\n          } else if (isNaN(min)) {\n            width.min = undefined;\n          }\n          return {\n            label: col,\n            name: col.toLowerCase().trim(),\n            numeric: /^--*[ \\t]*:[ \\t]*$/.test(alignment[index]),\n            width,\n          };\n        });\n\n        const data: any[] = [];\n        for (let i: number = 2; i < dataTableLines.length; i++) {\n          const rowSplit: string[] = dataTableLines[i]\n            .split('|')\n            .filter((cell: string) => {\n              return cell;\n            })\n            .map((s: string) => {\n              return s.trim();\n            });\n          const row: any = {};\n          columns.forEach((col: string, index: number) => {\n            const rowSplitCell: string = rowSplit[index];\n            if (rowSplitCell) {\n              row[col.toLowerCase().trim()] = rowSplitCell.replace(/`(.*)`/, (m: string, value: string) => {\n                return value;\n              });\n            }\n          });\n          data.push(row);\n        }\n        componentRef.instance.data = data;\n        componentRef.instance.sortable = true;\n        componentRef.instance.sortChange.subscribe((event: ITdDataTableSortChangeEvent) => {\n          componentRef.instance.data.sort((a: any, b: any) => {\n            const compA: any = a[event.name];\n            const compB: any = b[event.name];\n            let direction: number = 0;\n            if (!Number.isNaN(Number.parseFloat(compA)) && !Number.isNaN(Number.parseFloat(compB))) {\n              direction = Number.parseFloat(compA) - Number.parseFloat(compB);\n            } else {\n              if (compA < compB) {\n                direction = -1;\n              } else if (compA > compB) {\n                direction = 1;\n              }\n            }\n            return direction * (event.order === TdDataTableSortingOrder.Descending ? -1 : 1);\n          });\n          componentRef.instance.refresh();\n        });\n        setTimeout(() => {\n          componentRef.instance.refresh();\n        });\n      },\n    );\n  }\n\n  private _replaceLists(markdown: string): string {\n    const listRegExp: RegExp = /(?:^|\\n)(( *\\+)[ |\\t](.*)\\n)+/g;\n    return this._replaceComponent(\n      markdown,\n      TdFlavoredListComponent,\n      listRegExp,\n      (componentRef: ComponentRef<TdFlavoredListComponent>, match: string) => {\n        const lineTexts: string[] = match.split(\n          new RegExp('\\\\n {' + (match.indexOf('+') - 1).toString() + '}\\\\+[ |\\\\t]'),\n        );\n        lineTexts.shift();\n        const lines: IFlavoredListItem[] = [];\n        lineTexts.forEach((text: string, index: number) => {\n          const sublineTexts: string[] = text.split(/\\n *\\+ /);\n          lines.push({\n            line: sublineTexts.shift(),\n            sublines: sublineTexts.map((subline: string) => {\n              return subline.trim();\n            }),\n          });\n        });\n        componentRef.instance.lines = lines;\n      },\n    );\n  }\n}\n","import {\n  Component,\n  Input,\n  ChangeDetectorRef,\n  SimpleChanges,\n  OnChanges,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { TdMarkdownLoaderService } from '@covalent/markdown';\nimport { ITdFlavoredMarkdownButtonClickEvent } from '../flavored-markdown.component';\nimport { ICopyCodeTooltips } from '@covalent/highlight';\n\n// TODO: make a td-markdown-loader component\n\n@Component({\n  selector: 'td-flavored-markdown-loader',\n  styleUrls: ['./flavored-markdown-loader.component.scss'],\n  templateUrl: './flavored-markdown-loader.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdFlavoredMarkdownLoaderComponent implements OnChanges {\n  /**\n   * url: string\n   * The url of the markdown file.\n   */\n  @Input() url: string;\n\n  /**\n   * httpOptions: object\n   * HTTP options that can be part of the request.\n   */\n  @Input() httpOptions: object;\n\n  /**\n   * anchor: string\n   * Anchor to jump to.\n   */\n  @Input() anchor: string;\n\n  /**\n   * copyCodeToClipboard?: boolean\n   *\n   * Display copy button on code snippets to copy code to clipboard.\n   *\n   */\n  @Input() copyCodeToClipboard: boolean = false;\n\n  /**\n   * copyCodeTooltips?: ICopyCodeTooltips\n   *\n   * Tooltips for copy button to copy and upon copying.\n   */\n  @Input() copyCodeTooltips: ICopyCodeTooltips = {};\n\n  /**\n   * contentReady: void\n   * Emitted when markdown rendering is finished.\n   */\n  @Output() contentReady: EventEmitter<void> = new EventEmitter();\n\n  /**\n   * loadFailed: Error\n   * Emitted when loading of markdown file fails.\n   */\n  @Output() loadFailed: EventEmitter<Error> = new EventEmitter();\n\n  @Output() buttonClicked: EventEmitter<ITdFlavoredMarkdownButtonClickEvent> = new EventEmitter();\n\n  content: string;\n  loading: boolean = true;\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _markdownUrlLoaderService: TdMarkdownLoaderService,\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.url || changes.httpOptions) {\n      this.loadMarkdown();\n    }\n  }\n\n  async loadMarkdown(): Promise<void> {\n    this.loading = true;\n    this._changeDetectorRef.markForCheck();\n    try {\n      this.content = await this._markdownUrlLoaderService.load(this.url, this.httpOptions);\n    } catch (error) {\n      this.loadFailed.emit(error);\n    } finally {\n      this.loading = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatCheckbox, MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatListModule } from '@angular/material/list';\n\nimport { CovalentDataTableModule, TdDataTableComponent } from '@covalent/core/data-table';\nimport { CovalentHighlightModule, TdHighlightComponent } from '@covalent/highlight';\nimport { CovalentMarkdownModule, TdMarkdownComponent } from '@covalent/markdown';\n\nimport { TdFlavoredListComponent } from './cfm-list/cfm-list.component';\nimport {\n  TdFlavoredMarkdownComponent,\n  TdFlavoredMarkdownContainerDirective,\n  TdFlavoredMarkdownButtonComponent,\n} from './flavored-markdown.component';\nimport { TdFlavoredMarkdownLoaderComponent } from './flavored-markdown-loader/flavored-markdown-loader.component';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatCheckboxModule,\n    MatListModule,\n    MatProgressBarModule,\n    CovalentDataTableModule,\n    CovalentHighlightModule,\n    CovalentMarkdownModule,\n    MatButtonModule,\n  ],\n  declarations: [\n    TdFlavoredListComponent,\n    TdFlavoredMarkdownComponent,\n    TdFlavoredMarkdownContainerDirective,\n    TdFlavoredMarkdownLoaderComponent,\n    TdFlavoredMarkdownButtonComponent,\n  ],\n  exports: [TdFlavoredMarkdownComponent, TdFlavoredMarkdownLoaderComponent],\n})\nexport class CovalentFlavoredMarkdownModule {}\n"]}